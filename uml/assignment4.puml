@startuml
'https://plantuml.com/sequence-diagram

class ToDoListApplication {
    + main(String[]) : void
    + Start(Stage) : void
    + close() (?)
}

class ToDoList {
    - ArrayList : Item

    + clearList() : void
    + saveListToFile(File, ToDoList, String) : boolean
    + loadListFromFile(File) : ToDoList
}

class Item {
    - description: StringProperty
    - date : StringProperty
    - completed: BooleanProperty

    + getDescription() : String
    + setDescription(String) : void
    + getDate() : String
    + setDate(String) : void
    + getCompleted() : BooleanProperty
    + setCompleted(boolean) :
    + completeItem(Item) : void
    + removeItem(ArrayList<Item>, Item) : void
    + editItem(ToDoList, Item, Item) : void
    + addItem(ToDoList, Item) : void
}

class ToDoListController {
    model: toDoList

    + displayList() : void
    + initialize() : void
    + collectAllItems(ToDolist) : ObservableList
    + collectCompletedItems(ToDolist) : ObservableList
    + collectIncompleteItems(ToDolist) : ObservableList
    + getFileFromFileChooser() : File
    + getDirectoryFromChooser() : File

    'GUI event handlers
    + tableview.getSelectionModel()
    + completeItemMenu
    + completeItemMenu
    + removeItemMenu
    + sidebar (buttons)
    + clearListButton
    + loadList
    + saveList
    + onAddItemClick()
    + onEditItemClick()

}

class AddItemController {
    model : Item
    'GUI event handlers
    + onAddItemButtonClick() : Item
}

class EditItemController {
    model : Item

    'GUI event handlers
    + onEditConfirmButton
}

class Deserializer {

    deserializeJson(Serializer) : Item
}

class Serializer {
    description : String
    date : String
    completed : boolean

    serializeItem(Item) : Serializer
}

ToDoList <--* Item
ToDoListApplication <|-- ToDoList
ToDoList <--* ToDoListController
ToDoListApplication <--* ToDoListController
ToDoListController --- AddItemController
ToDoListController --- EditItemController
ToDoList <-- Serializer
ToDoList <-- Deserializer
@enduml